<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACNUExURf///wAAAPn5+ePj4/z8/PHx8fX19e3t7enp6eXl5dfX19ra2s/Pz8bGxt/f36urq15e
        XrW1ta+vr6WlpVhYWJaWlkFBQX5+fnNzc8LCwi4uLikpKUpKSru7uzc3N2pqap2dnYuLixoaGg8PD3x8
        fJGRkWRkZHBwcCIiIjw8PFpaWk9PTxgYGEZGRoWFhTByaJ0AABaNSURBVHhe7Z3puqI6s4BFwBFEwFlx
        npbT/V/eeZJASFUqEVf37l79Hd4/u7cgZqjUlAqr0aipqampqampqampqampqampqampqampqamp+Xdo
        truDXrbdHVdfi+X1ulhPbsddFPbdju/he/892mGcHkcLh+IwGZ6irPcv9zI8nVdX3C/EYT3aRB38zX8A
        343uuDM2pvNuEz/jJxNEQ9yFtyxfmYuf81PJbkvc/Gp8Tfv4WT+PZveC2/0Ry/hnr0kvnuEmf8xi3MOP
        /Tlkn68+isX0Zy7IVnjATf0+xwF+/N8n2+BWAta3zXQbRVGUJFEUpePZ8P7A96gsT238C3+X9tQ8gftL
        2ht02z6wdy2/7Q7C1w3fXLKK1fv/Mq0tbp7gMDmfAnwzJpqajMu1/1McuoBWMKtTVRMeRDNSBA4/RFR3
        pOt5CT5pXXOQTPATGJMfYDn6K9wqx7neInxbBfqvJ36Q4zjjFr7vDxOtcZOc6y785vrppIS8b/6q4fBO
        uD2OM+58s38Mv6eP2CTEd/05BpqyX+x+OQbq6YZ1jO/5U+jjffwgNuhFpsFItMjy5ON7/ggh7uA6NLVZ
        o3e6LRyjqfRT9GRn8zf0Dbbyiy2+w4ww8cfygyZau+0LNpDvZ/F3D0KEWjCrJKB+tmVmcse/MiqnPEvB
        bY2GN0eOztP+/HY2nn1igN+DO7itIKCtZLY6OAkTUv6dZSmmRyftIQ+of4a/8GW2Gs1sszo4zm/1Dsbw
        10f2Ac55iZYywyeWsJy4AXMb9riFEYo+yC623bjQBy987RdAMzh7v0gYfXE3G/Sp+J5YOt6J51N3+P7G
        HPpLa20cO1mq6N0rvvx9EvV330hoEKVZcV3czmRTDNGyKz4XSouwep2R+jvOBIxkM7o8oT76bQsRdnBv
        cTkK6z0RcZBYWUyF9kQWvFiIbeaRflE5KJT3KfSl39t+wSuMD7S5FaEmCiw+VUsxayc2j3P+T6ZCPTE5
        l+LW82GbpNQ68+CKP7NpamdjzZniDPG3v8cAhDn62pB4wibkMDXg8n9xFSoWIluTnNccfrfEi9WnOC+P
        K2Qai7r9ALg0vixLUMzg9Z6ri3mj0RK5VKZCA/FhlRA53MufewezRL8MSPiOclVR4AVZEudKv8nveAbN
        trASd79QKUc2LOIBhHbRySp38WUZ8KoALbOGU9A83RYHx1kPucrjU3hgEtkS0x43GhmXrwUbFyHrG/AA
        E/mEG1kWYjuhlNVnzNUlsACeYKs0kgu2OLniXPm+G55FmmPWavjCerFui1h3ja08QbuPHSiVySZqNY7F
        /1V4nJ28hYIFiA1aql6fuI0Wv3WxHZaOyaBQ/sNGo5NL3ruUYTfbEmmSgvsp5mKUFR9UknobcqwYsHFi
        seWsu40uziyN4qYU8tO2GCprk1rpZWLSm46z3vbaRUhSfLZET/gUOVQM2EGfffRg7tvUmWRM5ypppeV9
        12u0umy4yw8PvO2mleO1e2NDGpUnYmdQbUrZquY/mgDTMoXXuF7Z8CGNA7Y+c5vuOOtjEjTC5LXizkxp
        azb8aU+kjQWdeKfF+SWrcYbHRa5UHIV9BEg7jZAPyOV3OU53x/NwtTpH0qz0OkyDc13DnKpSLUYvZ5W6
        RNrKSzdUWjFnse0T7mfu1Cte0ndQdbbmygD/hY1AKxT/ENLE/8k8DjlM0yYRk3sd94RzIyWP5zk2SGGr
        SF/9klujurpspQHy/pScPPFfNhbCueRmsOFv2fo7U9I0iHdYPSmMdNlUkDmVd8rZgmrrz/iiqkIEj3Y+
        revZUdi+nRBIz+33B/pUtKMhES0UTCKXkE2FeeH35L/yDTrK7z/1BureY9yEwd3TLD+d3taymbiaxe9b
        LcyvRTm/R0mtPTQZZYSFZc4t2AzlU025w342tsjm7ZTZJ68gD1a+79Z0lMItKaMuCDnbQZSm22Dgdnhf
        N41Gu/zSmu6gn17WZps+SfuEtNDIIMvqQ1hQXRb5q7FzcvuK8LUTLk4tbhu4Eo2Gi72zfA6JMNlrBzss
        2SX71exDnSG/ii9Ug7ssOafiwyafKymyvfHCuYTdIOEfP3JTHszjgFgaXeYCGLml82qyqSBt6Mff5CjG
        fp033cv44r7lM9racZG8PnNfyyYs/vZsWXqTaKA1svk+8JO6/jt7l42BojMK4fHErq0MOmF+Sk8NCryO
        uzP7m/vneQ770hlEo3yhLnYB6eLliBTJd7M1SoDGQvWcNjcgRRTsKXmnhWEG+/HOYvSG2zmS5/kY3r4c
        0wqL0S6M06RKagThK1uz6vo/OrP5sVQihTo7bImF12gMtjezR+bcYxfrzXCkW8nlzGgbpT0jjZkdxSMF
        eeUAJyiD0+yUaIuIyWZA7BYX7O9HolE96DBIroRe5syL8TAIkA1ljwSqcON4AvrxzjJ55/EcTx5PIhrN
        5MOgStqFcr4TY/yG8ukLUv5stMcbS/fuEeGiMtDWD4SYcYbcHjf7hwYUFYLF0kqzE9iKwe5HcxrYIKEF
        tDMgUuqqxa6IV+oZZcfvHV4/mpon73GOQiI+zKFKPAC0ey0ytMxk4ytvUBzoG75mojMemrtH6U0ATORT
        zPBXONK0mAePRBFSWjogXqd/1LV8wXV1eVtPBLd+aMilJkeGiq/NqInQ975TL3mZJ+9w3oYV9BxRGKVB
        TqJbrPpqqfSCbhkAEKE9oD++0adjOKMMy2aQpLvXKUrgqpJZpZzDdN5PserREkWMtgyDP3JrpIZyHJOt
        5TX6IcgJQ673Kfpuq7dVB2PTK5cOrFBY54nRLuojKYhyQVVZTpJSSEUqiaKXTC2Td0mx3mwl2pkFacYH
        wBX9knPVhtVgZA2R2Pn5NFtTWrQZvQzd8dnSvWEy0NoSEKGhHHWoSBXzJI0B50oJoky0f+TWlA/V9x9b
        3cBywOJ6n1I23dXmD1QPgVorEAmBTQU67yNb80G2pnwsNvfNXjozT951k9Blbnq9H0M6S2APC658Nd1n
        cK9kkEpepSmT2Xcgbe7LcKqQMwq7BptOd9CR60bqQw40e8DVIeuDvuPWlMZJbgk0uz2LbC7vM1KABAHt
        qJb7POqeFe4h2ClV6v4UZHYEXzCi7InmYVdg05uPzZbvPJloGTIY5bKx9RAoIdLml/ZCVxoGgrI3TGv0
        djbZHIbYpmNk3haiqH4Z5XGgwgA9pOdQenz0ABDIwNlxOnNKCeZcRzuLbBboLjXfJz0oAR/UNHCzDBTW
        0rkumXCZGI03QhF9szv9OEZv3WmGj0qZ1q8ky5LXQ+iwfsIFAFbmql9vWjbZJUXorI6aFa0eWWeTuaRZ
        0EFbcDuxPep1Q1bJsVkLFQ8LL1TnTOYLOZRjqro1FbM1nmHh5FxHLyibbTe45KpifQzx4WWwxGTFn9fu
        b4UCYqWnRVFfjpJ38oCdeZJBsLKOV1Xcmmawpa0XZzlLkGwOkiJ7K9ijPIV6rZidQbIrtSf7AG/KFdLW
        gRbK6HnK2wyTrBBMbXpzE3SRWfBn+nA8hspQAyG9s/ntbs/AT+EDgpJQjx1/RAT39s3LrJpb0+qG+rkO
        yWI01d2+tik7Vub+gA5JcPEig6vOfHtcZa0dHrPEuMUtC3yhJEguBsPMFsYlDQjF0jNXh0j3CogZ05ua
        GhNrxxJoSvQhlkipMNjm4DUyd8/ZhFg2BXOLPMvkHght2Qchnpo9F9MB/ljHZs8tbk3LzdAJAJXl+WQc
        OG0yILni1nqIlIq8U3cMEMr2EKLZ6Uu/BCVdmmFqcaev08jismilJoiDUPlaD3V5FIVITUtLGGSShtGP
        X2pBhWpQgtfIIhq6ZQP0dR2KEAV1QHnxRupDIyL3Jh2BFNAd9LcoR6voWxg8A5ajnVE2c1oVsn9c+oC2
        FfKofqJ8jPxvyEr3OL1O70QMSmkvtBWfs5gmgcmwlqDTFyRPJn1geQlflC/Eq6KmnvlDu0ZrJcyjShAb
        crRl8V2TUvWHS0+XzYCYUPzF+3ieahqL+ckt8AkXocxxzllXFdbiqS1tjXKWczTk/fHZrPtLccbe5/qm
        j1SzG86o7AD0lA8X0QIfKYsLmzIQnSzZYLW4/hLb5YLS1e5vcDTzuIOAwuv0XoRs5uyfU8WpBCt+MU31
        dzcF0VSIsnYFiNNDNtCDUdCeqRC4pVSup4HikamWbg4q+VanuWqLB4mqNzEjXK8irxwuASGbu6GUBOwP
        wmpntX3w99lkoS2XiRiO7kl9BF+xBV6nH13Oz/VoM5sPVKnqjqFDC7knep2ftJKUxwLiMlyiKosCOeqV
        DpAg5rvBEJZxXWFn6EGlWFVa3d7GLJvLu1I6oWIvdlcfiOMysAyBF5Efwcu5s4+0AkYCa0jg9WJLjvax
        IX1mjtyXIreX1KWGwxbgsMHWgc6LIg5Lpqdgamoj2z+w7W0NY1OOliHzPwvCHMD1g2YZ9BD2PgBqnH/k
        GSxvyUZT4pxmN9BirZLrfWpI25RYHPJGo6s2FdWwgx7CLS/ozYnPwKEbggs5g0H8Mk/eYZOGlskrkG4N
        dTgKagi46QN6CI8oUD18E4ZQbyFQNTkFsCEWikQfWTEDHDNYywENPrgEnEF5msXsBB+GuK1Na442h9pm
        o5BOEqVswYqagEsZcDxAiAWmq9wnywynKYYZ8iZ6tnoVyZqaEgrp1lB7OjBUBZeUtD9SxT74kqKgUNZM
        sM7gWnJPtnqVYekkiLOAVZBfwRcYQI/BujIYOykdgT4a2GNxp8ATut7B6wRbXcN7mTiL+ytUU6/VC6Dk
        iFOlKsBewCQJUuLSJMIFih2FbrzdfO0d57EY7sA2fzNINmbFcj3mNr38yFDHRyCjN9KpKJ/Ijk2qVwbq
        JfmCjABpCMJXanXcwcDtgvfQ9k+2PNhZvgK0dCTfenkl0q0hS7tUe4EeqrvAE20FGTMrJc1uoLmtJVcu
        m5IycPngoJNfRK1ka0B8BQ27UnBjhN4KUwiTo3ny9htcr1JKyCdV3dbDUV3Vtp2BmKo10ia0qBIwfw0t
        3txsruVo/VLR0BulNNJAU5seMFCAktEzj75gb85EtrrWHO3oRAmUGrLheNWG3LInX1ABVCNyXm1nrZmv
        Qvm6DC9IZ+bJu24iUx5MyR8Qbp4ZudCpcQNuDQ/2FIyJMU5Kt7NvrVc567IpkSrDcR74mhVp9Ci3Blr2
        vM3NTrA7bOxJ6iuxrP1uSL+7g7PA+64YxTq/VWGQ4msHfIEBLDuTflbnzCwF20TwTXtrzkhrbCtMzuZY
        f03lwRCKt0SFsxakW6NnldGrG46NrqxzFhvRhqhoh73G4HU3Lz3nEvKD0W8onX264NuMtGyEB6JnfiXi
        bv+ltXwB+9dy55YFu7y9f9epQMmdkw21IMuBSTNq1OrF8bVgrObOr7MEiFAY2fTmzKg3dcph+sBlE0gd
        RbpCZt9FxqDtfnIZrq/r23nbA6owe7e3RenNEBcWC5RiDeghV0EaNsphVwq+EWRFcoHvxtpGaMniNiZj
        dD9jX6J8D3UL61MhVXwFKlsjT/VrrPCtkmaQns25p8WseF0P/JIcaxxzMdQTyR9P4Zsz3wZ1aQia2cI8
        3i0O3UWrV+GE01EoRZGYX/UsJL5WAenWUGoNJixU9AXfdkOLbK5vhn3XgGsCFqEKlUAYdOUxVCPfIbUJ
        5dbohQWMhxbaNPw5Ko4CfE0juntSTFjqRaw2/X0ziiBVz9CoFN8m39CHtxlZinruYlGbH1dGneQcXuJl
        J5h4NmL/EWJycGXqAN+nFthaFZwR66ts4O4YCrsZrUFs8zfPY8oKFS+d5RMrvF8WjAghwCkVxXek1FAF
        ZO6XHKDy8Y+bdrzOXq+yYC/iMSASb1z1C5eTKWchMGgzr6dIB+58RWReiSwcKzyCe6Zt88RTm785JfZd
        S4R6HDLjV74fU/jBqIZS1QTgQnWk0SOzNQELu7XQxndR4SBgfSOOdrfcdPg83M/ixe3K2wZz4cyKd5zC
        zTy1msMUVr/Fmq3pvLQtSD/cWvI061dMjVQmxXnFGppnenibxZWXzJuobou6o16pQJZElq6THhP+LJjd
        LXpz1iNeA4XLMNlyUt42KISTHRLKZVdZDmoQSvmV1ZC1NaRbo9B2M0vh0vp2IvwRDqzG510USbArC0u7
        3F6wmDN3a0rbqe5akWqiItLo4eWm0p5Hd7NNn+wSSjZz8F7uY1AkwZjxyd+PGcsD3VJlttUfpM1ONeRI
        ER6TwItnK1zMU7I8GWQzRx4RHRZO4KvI8PLcpxBFtiaF5ShqlDx1n8BWX/oe+Rh8geH39XfCl6w3hN5k
        Ar0to/28oWwdhXkfZUq91Wi4Qi2zHuYORq7a1KmnXlT1AbIHWmNb860x0Gc5JDIW8sMxE7diAzzXh8Lv
        zeXFL4Z1FMfiB4Tl4AFWKnqoGooDpec/wHTmOzla9KazC0h/s/SS8lbledd8nYpLPeUNQQLupDZO5YGA
        jnr1V9QMg3iVTdvd2l4KNEy16S4pVHx+giTvYa5oxYw1scurxYWuupu1tC3zKshX2eTZmk4GMkyIZ/4K
        URNNWSCw4sOQ9zD32bm9uTZCH+yLXLGxa6v+fF5T/Suor7Lx5hv0WnCVxatnmT2OkvvgMpGfIRViKKR0
        eX6k6q7/l2anTBUB30Vma6b0H/CR7Cts/KinXrn9yXXpuNlodKS/x048jVfLx/46uWgPbQL1Zn7JUHVs
        RdaQ5Xv3VxxPFt26smxHocg2qbq2mULxg/k81EUeborsf81Q5BiTajp6hgbhcocsEI/k5Uj4ERzLUAHH
        /jcsQoZ+SKDg8HVJYQ0CGSkriICzeJP7lalN7A89bO/X6wAtd3g7otUgzlZxnqds0Gh40Ha9qWfJe1gY
        janXaMBXQA3HtvfrDWD2yzLVn0EtxL30N+EZSDrMkghDt50VFRtstsoj6+/e/ejCn6IygN8DHTw6TIaR
        Os59qGLvlLNWoJ1h4gsp3A3P551ZNgUe2j63j+VHyNoaxn2c4f3EPnTfbH/iQts63VtkEgKrIxxnivOW
        v4B0a5zFVi97Z3IGu3gwW2H9YMi5YkNd5OUrf1roN8DFY7KJjIukjyqhlrodE+TNnJwTn7+04msYVeph
        E++SWOq/v0PGXlmPZROA1I1z3dINFyMh/tJR/NzFFYPzPs6vn+jHf5vWQL6y3oT2hw9XZOZCGL/8f94+
        tED89SAFY8LhvwQrAse5EH0UV/CnVpr473U5j99mBz9E0yLXVJNspoxPmjNtQ381jE1X/7eoL2XNmaDd
        BM85lX+joQptvUYR/iGNP4z6+t2C1KRW39PS5++3K9FP6RJVr/vT96TKj4mg5vrNLabfR5M6P7EfJR8P
        fHeHlTPjJ/y5XM33yLlZN9QgfjfSa6nZBP4+V/uXaCZ0JodtilboZCfcGg4UDv+mioH0iQXEWd5nqbWZ
        2Xj4NO2sGrykv4TlzR/sjbPTrD9wO20/p90dDHrRzPad/cvoE/8lmrb9DM5hfRuez5vN+Ty8Y6dMY/Y9
        dfzf4qf0avoG6yrr96+QWPbzK7O/WFfuX6Ydvz8vaGe5+4nyqdLqEV5OZa6pdXf1xxCdCXf1LYfV7Pse
        7R+nn84se40Uk13FP5nzY2h1KxzhLZjsqD9P9i/QjF/Dp8327Rejzfinq5Z3dII4PW00G79fj47jaN77
        qYbvQzzup/XDLE7SNInnvQHz4f5HOldTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1Pz/4b/A0OYVgiLMGel
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>